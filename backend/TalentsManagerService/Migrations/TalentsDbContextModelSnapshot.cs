// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalentsManagerService.Data;

namespace TalentsManagerService.Migrations
{
    [DbContext(typeof(TalentsDbContext))]
    partial class TalentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalentsManagerService.Data.Model.Knowledge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Knowledges");

                    b.HasData(
                        new { Id = 1L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 239, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "Ionic" },
                        new { Id = 2L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "Android" },
                        new { Id = 3L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "iOS" },
                        new { Id = 4L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "HTML" },
                        new { Id = 5L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "CSS" },
                        new { Id = 6L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "Bootstrap" },
                        new { Id = 7L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "jQuery" },
                        new { Id = 8L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "AngularJs" },
                        new { Id = 9L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "Java" },
                        new { Id = 10L, CreatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), LastUpdatedAt = new DateTime(2019, 1, 10, 0, 34, 23, 243, DateTimeKind.Local), Name = "ASP .NET MVC" }
                    );
                });

            modelBuilder.Entity("TalentsManagerService.Data.Model.Talent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailabilityHour");

                    b.Property<int>("AvailabilityPartOfDay");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<decimal>("HourlySalary");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("Linkedin");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Portfolio");

                    b.Property<string>("Skype");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Talents");
                });

            modelBuilder.Entity("TalentsManagerService.Data.Model.TalentKnowledge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("KnowledgeId");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("SkillLevel");

                    b.Property<long?>("TalentId");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.HasIndex("TalentId");

                    b.ToTable("TalentKnowledges");
                });

            modelBuilder.Entity("TalentsManagerService.Data.Model.TalentKnowledge", b =>
                {
                    b.HasOne("TalentsManagerService.Data.Model.Knowledge", "Knowledge")
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TalentsManagerService.Data.Model.Talent")
                        .WithMany("Knowledges")
                        .HasForeignKey("TalentId");
                });
#pragma warning restore 612, 618
        }
    }
}
